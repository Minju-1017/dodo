<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dodo.module.game.GameDao">
	<resultMap id="resultMapObj" type="com.dodo.module.game.GameDto"></resultMap>
	<resultMap id="resultMapObj_GR" type="com.dodo.module.game.GameReviewDto"></resultMap>

	<!-- 공통 구문 selectCommon으로 선언 -->
	<sql id="selectCommon">
		FROM 
			game a
		WHERE 1=1
       		<if test="shDelNy != null and !shDelNy.equals('')">AND a.gDelNy = #{shDelNy}</if> 				
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.gRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 2
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.gUpdtDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>
			<if test="shCategoryCd != null and !shCategoryCd.equals('')">AND a.gCategoryCd = #{shCategoryCd}</if>
			<if test="shOfficialCd != null and !shOfficialCd.equals('')">AND a.gOfficialCd = #{shOfficialCd}</if>	
	        <if test="shUseAge != null and !shUseAge.equals('')">AND a.gUseAge >= #{shUseAge}</if>			
			<if test="shPeople != null and !shPeople.equals('')">AND #{shPeople} >= a.gMinPeople AND a.gMaxPeople >= #{shPeople}</if>			
	        <if test="shTime != null and !shTime.equals('')">AND #{shTime} >= a.gMinTime AND a.gMaxTime >= #{shTime}</if>				
			<if test="shMinLevel != null and !shMinLevel.equals('')">AND a.gLevel >= #{shMinLevel}</if>	
			<if test="shMaxLevel != null and !shMaxLevel.equals('')">AND #{shMaxLevel} >= a.gLevel</if>		
	        <choose>
	            <when test="shOption == 1">AND a.gSeq = #{shValue}</when>
	            <when test="shOption == 2">AND a.gName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 3">AND a.gBestPeople = #{shValue}</when>
	            <when test="shOption == 4">AND a.ggRecommendPeople = #{shValue}</when>
	        </choose>
	</sql>
	
	<sql id="selectGameInfoCommon">
		FROM 
			game a
		WHERE 1=1		
			AND a.gDelNy = 0
			<if test="shCategoryCd != null and !shCategoryCd.equals('')">AND a.gCategoryCd = #{shCategoryCd}</if>
			<if test="shValue != null and !shValue.equals('')">AND a.gName LIKE CONCAT('%',#{shValue},'%')</if>
			<if test="shPeopleList['1인'] == true or shPeopleList['2인'] == true 
				or shPeopleList['3인'] == true or shPeopleList['4인'] == true 
				or shPeopleList['5인'] == true or shPeopleList['6인'] == true 
				or shPeopleList['7인 이상'] == true">
				AND 
				<trim prefix="(" suffix=")" prefixOverrides="OR">
					<if test="shPeopleList['1인'] == true">OR (1 >= a.gMinPeople AND a.gMaxPeople >= 1)</if>
					<if test="shPeopleList['2인'] == true">OR (2 >= a.gMinPeople AND a.gMaxPeople >= 2)</if>
					<if test="shPeopleList['3인'] == true">OR (3 >= a.gMinPeople AND a.gMaxPeople >= 3)</if>
					<if test="shPeopleList['4인'] == true">OR (4 >= a.gMinPeople AND a.gMaxPeople >= 4)</if>
					<if test="shPeopleList['5인'] == true">OR (5 >= a.gMinPeople AND a.gMaxPeople >= 5)</if>
					<if test="shPeopleList['6인'] == true">OR (6 >= a.gMinPeople AND a.gMaxPeople >= 6)</if>
					<if test="shPeopleList['7인 이상'] == true">OR a.gMinPeople > 6</if>
				</trim>
			</if>
			<if test="shTimeList['10분 이내'] == true or shTimeList['11 - 20분'] == true 
				or shTimeList['21 - 30분'] == true or shTimeList['31 - 60분'] == true 
				or shTimeList['61 - 90분'] == true or shTimeList['90분 초과'] == true">
				AND 
				<trim prefix="(" suffix=")" prefixOverrides="OR">
					<if test="shTimeList['10분 이내'] == true">OR (a.gMinTime >= 0 AND 10 >= a.gMaxTime)</if>
					<if test="shTimeList['11 - 20분'] == true">OR (a.gMinTime >= 11 AND 20 >= a.gMaxTime)</if>
					<if test="shTimeList['21 - 30분'] == true">OR (a.gMinTime >= 21 AND 30 >= a.gMaxTime)</if>
					<if test="shTimeList['31 - 60분'] == true">OR (a.gMinTime >= 31 AND 60 >= a.gMaxTime)</if>
					<if test="shTimeList['61 - 90분'] == true">OR (a.gMinTime >= 61 AND 90 >= a.gMaxTime)</if>
					<if test="shTimeList['90분 초과'] == true">OR a.gMinTime >= 91</if>
				</trim>
			</if>
			<!-- TODO: Level 검색 안됨!!!!!!! -->
			<if test="shLevelList['(5)'] == true or shLevelList['(4 - 4.99)'] == true 
				or shLevelList['(3 - 3.99)'] == true or shLevelList['(2 - 2.99)'] == true 
				or shLevelList['(0 - 1.99)'] == true">
				AND 
				<trim prefix="(" suffix=")" prefixOverrides="OR">
					<if test="shLevelList['(5)'] == true">OR (a.gLevel = 5)</if>
					<if test="shLevelList['(4 - 4.99)'] == true">OR (a.gLevel >= 4 AND 4.99 >= a.gLevel)</if>
					<if test="shLevelList['(3 - 3.99)'] == true">OR (a.gLevel >= 3 AND 3.99 >= a.gLevel)</if>
					<if test="shLevelList['(2 - 2.99)'] == true">OR (a.gLevel >= 2 AND 2.99 >= a.gLevel)</if>
					<if test="shLevelList['(0 - 1.99)'] == true">OR (a.gLevel >= 0 AND 1.99 >= a.gLevel)</if>
				</trim>
			</if>
			<choose>
	            <when test="shOrderOption == 1">ORDER BY grScoreAvg DESC, a.gSeq DESC</when>
	            <when test="shOrderOption == 2">ORDER BY grScoreAvg ASC, a.gSeq DESC</when>
	            <when test="shOrderOption == 3">ORDER BY a.gLevel ASC, a.gSeq DESC</when>
	            <when test="shOrderOption == 4">ORDER BY a.gLevel DESC, a.gSeq DESC</when>
	            <when test="shOrderOption == 5">ORDER BY a.gMaxTime ASC, a.gSeq DESC</when>
	            <when test="shOrderOption == 6">ORDER BY a.gMaxTime DESC, a.gSeq DESC</when>
	            <when test="shOrderOption == 7">ORDER BY a.gMaxPeople ASC, a.gSeq DESC</when>
	            <when test="shOrderOption == 8">ORDER BY a.gMaxPeople DESC, a.gSeq DESC</when>
	        </choose>
	</sql>
	
	<sql id="selectCommonColumn">
		a.gSeq,
	    a.gName,
	    a.gLevel,
	    a.gMinPeople,
	    a.gMaxPeople,
	    a.gBestPeople,
	    a.gRecommendPeople,
	    a.gUseAge,
	    a.gMinTime,
	    a.gMaxTime,
	    a.gOfficialCd,
	    a.gOfficialUrl,
	    a.gComuUrl1,
	    a.gComuUrl2,
	    a.gCategoryCd,
	    a.gGDName,
	    a.gGAAName,
	    a.gGPName,
	    a.gRegiDate,
	    a.gUpdtDate,
	    (SELECT IFNULL(AVG(b.grScore),0)
			FROM gameReview b
			WHERE 1=1 
				AND b.grDelNy = 0 
				AND b.game_gSeq = a.gSeq
	    ) as grScoreAvg,
	    (SELECT COUNT(*) FROM gameReview b
			WHERE 1=1 
				AND b.grDelNy = 0 
				AND b.game_gSeq = a.gSeq
		) as grCount,
		(SELECT c.fPath
			FROM gameSmallTnFile c
			WHERE 1=1 
				AND a.gSeq = c.rSeq
	    ) as fPath
	</sql>
	<!-- End -->
	
	<select id="selectListCount" resultType="Integer">
		SELECT COUNT(*)
		FROM (
		    SELECT *
		    FROM (
		        SELECT 
		            a.*,
		            (
		                SELECT IFNULL(AVG(b.grScore), 0)
		                FROM gameReview b
		                WHERE b.grDelNy = 0
		                  AND b.game_gSeq = a.gSeq
		            ) AS grScoreAvg
		        <include refid="selectCommon"/>
		        ORDER BY a.gSeq DESC
		    ) AS sub_games
		    WHERE 1=1
		    	<if test="shMinScoreAvg != null and !shMinScoreAvg.equals('')">AND sub_games.grScoreAvg >= #{shMinScoreAvg}</if>	
				<if test="shMaxScoreAvg != null and !shMaxScoreAvg.equals('')">AND #{shMaxScoreAvg} >= sub_games.grScoreAvg</if>
		) AS games
	</select>

	<select id="selectList" resultMap="resultMapObj">
		SELECT *
		FROM (
			SELECT
				<include refid="selectCommonColumn"/>
			<include refid="selectCommon"/>
			ORDER BY a.gSeq DESC
		) AS sub_games
		WHERE 1=1
			<if test="shMinScoreAvg != null and !shMinScoreAvg.equals('')">AND sub_games.grScoreAvg >= #{shMinScoreAvg}</if>	
			<if test="shMaxScoreAvg != null and !shMaxScoreAvg.equals('')">AND #{shMaxScoreAvg} >= sub_games.grScoreAvg</if>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
	<select id="selectTop10List" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
		FROM 
			game a
		WHERE 1=1
			AND a.gDelNy = 0
		ORDER BY grScoreAvg DESC, a.gSeq DESC LIMIT 0, 10
	</select>
	
	<select id="selectGameInfoListCount" resultType="Integer">
		SELECT COUNT(*)
		FROM (
			SELECT *
		    FROM (
				SELECT
					a.*,
					(
						SELECT IFNULL(AVG(b.grScore), 0)
						FROM gameReview b
						WHERE b.grDelNy = 0
							AND b.game_gSeq = a.gSeq
					) AS grScoreAvg
			    <include refid="selectGameInfoCommon"/>
			) AS sub_games
			WHERE 1=1
				<if test="shScoreList['(8 - 10)'] == true or shScoreList['(6 - 7.99)'] == true 
					or shScoreList['(4 - 5.99)'] == true or shScoreList['(2 - 3.99)'] == true 
					or shScoreList['(0 - 1.99)'] == true">
					AND 
					<trim prefix="(" suffix=")" prefixOverrides="OR">
						<if test="shScoreList['(8 - 10)'] == true">OR (sub_games.grScoreAvg >= 8)</if>
						<if test="shScoreList['(6 - 7.99)'] == true">OR (sub_games.grScoreAvg >= 6 AND 7.99 >= sub_games.grScoreAvg)</if>
						<if test="shScoreList['(4 - 5.99)'] == true">OR (sub_games.grScoreAvg >= 4 AND 5.99 >= sub_games.grScoreAvg)</if>
						<if test="shScoreList['(2 - 3.99)'] == true">OR (sub_games.grScoreAvg >= 2 AND 3.99 >= sub_games.grScoreAvg)</if>
						<if test="shScoreList['(0 - 1.99)'] == true">OR (sub_games.grScoreAvg >= 0 AND 1.99 >= sub_games.grScoreAvg)</if>
					</trim>
				</if>
		) AS games
	</select>

	<select id="selectGameInfoList" resultMap="resultMapObj">
		SELECT *
		FROM (
			SELECT
				<include refid="selectCommonColumn"/>
			<include refid="selectGameInfoCommon"/>
		) AS sub_games
		WHERE 1=1
			<if test="shScoreList['(8 - 10)'] == true or shScoreList['(6 - 7.99)'] == true 
				or shScoreList['(4 - 5.99)'] == true or shScoreList['(2 - 3.99)'] == true 
				or shScoreList['(0 - 1.99)'] == true">
				AND 
				<trim prefix="(" suffix=")" prefixOverrides="OR">
					<if test="shScoreList['(8 - 10)'] == true">OR (sub_games.grScoreAvg >= 8)</if>
					<if test="shScoreList['(6 - 7.99)'] == true">OR (sub_games.grScoreAvg >= 6 AND 7.99 >= sub_games.grScoreAvg)</if>
					<if test="shScoreList['(4 - 5.99)'] == true">OR (sub_games.grScoreAvg >= 4 AND 5.99 >= sub_games.grScoreAvg)</if>
					<if test="shScoreList['(2 - 3.99)'] == true">OR (sub_games.grScoreAvg >= 2 AND 3.99 >= sub_games.grScoreAvg)</if>
					<if test="shScoreList['(0 - 1.99)'] == true">OR (sub_games.grScoreAvg >= 0 AND 1.99 >= sub_games.grScoreAvg)</if>
				</trim>
			</if>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
	<select id="selectGameOrderList" resultMap="resultMapObj">
		SELECT
    		a.gSeq,
		    RANK() OVER(
		        ORDER BY 
		        	(SELECT IFNULL(AVG(b.grScore), 0)
				FROM gameReview b
				WHERE 1=1
					AND b.grDelNy = 0 
					AND b.game_gSeq = a.gSeq
		        ) DESC
		    ) AS grOrder
		FROM game a
		WHERE 1=1
			AND a.gDelNy = 0
	</select>
	
	<select id="selectGameOrder" resultMap="resultMapObj">
		SELECT *
		FROM (
			SELECT 
				a.gSeq,
				RANK() OVER (
					ORDER BY 
						(SELECT IFNULL(AVG(b.grScore), 0)
					FROM gameReview b
					WHERE 1=1
						AND b.grDelNy = 0
						AND b.game_gSeq = a.gSeq
					) DESC
				) AS grOrder
			FROM game a
			WHERE 1=1
       		 AND a.gDelNy = 0
		) AS ranked
		WHERE 1=1
			AND ranked.gSeq = #{gSeq}
	</select>
	
	<select id="selectGameRelationList" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
			, (SELECT b.fPath
				FROM gameSmallTnFile b
				WHERE 1=1 
					AND a.gSeq = b.rSeq
		    ) as fPath
		FROM 
			game a
		WHERE 1=1
			AND a.gSeq != #{gSeq}
			AND a.gDelNy = 0
			AND a.gCategoryCd = #{gCategoryCd}
		ORDER BY grScoreAvg DESC, a.gSeq DESC LIMIT 0, 5
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
		FROM 
			game a
		WHERE 1=1
			AND a.gSeq=#{gSeq}
	</select>
	
	<insert id="insert">
		INSERT INTO game
		(
		    gName,
		    gLevel,
		    gMinPeople,
		    gMaxPeople,
		    gBestPeople,
		    gRecommendPeople,
		    gUseAge,
		    gMinTime,
		    gMaxTime,
		    gOfficialCd,
		    gOfficialUrl,
		    gComuUrl1,
		    gComuUrl2,
		    gCategoryCd,
		    gGDName,
		    gGAAName,
		    gGPName,
		    gRegiDate,
			gDelNy	
		)
		VALUES
		(
			#{gName},
		    #{gLevel},
		    #{gMinPeople},
		    #{gMaxPeople},
		    #{gBestPeople},
		    #{gRecommendPeople},
		    #{gUseAge},
		    #{gMinTime},
		    #{gMaxTime},
		    #{gOfficialCd},
		    #{gOfficialUrl},
		    #{gComuUrl1},
		    #{gComuUrl2},
		    #{gCategoryCd},
		    #{gGDName},
		    #{gGAAName},
		    #{gGPName},
		   	now(),
		    0
		)
		
		<selectKey resultType="String" keyProperty="gSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE game
		SET
			gName=#{gName},
		    gLevel=#{gLevel},
		    gMinPeople=#{gMinPeople},
		    gMaxPeople=#{gMaxPeople},
		    gBestPeople=#{gBestPeople},
		    gRecommendPeople=#{gRecommendPeople},
		    gUseAge=#{gUseAge},
		    gMinTime=#{gMinTime},
		    gMaxTime=#{gMaxTime},
		    gOfficialCd=#{gOfficialCd},
		    gOfficialUrl=#{gOfficialUrl},
		    gComuUrl1=#{gComuUrl1},
		    gComuUrl2=#{gComuUrl2},
		    gCategoryCd=#{gCategoryCd},
		    gGDName=#{gGDName},
		    gGAAName=#{gGAAName},
		    gGPName=#{gGPName},
		    gUpdtDate=now()
		WHERE
			gSeq=#{gSeq}
	</update>
	
	<delete id="delete">
		DELETE FROM game
		WHERE
			gSeq=#{gSeq}
	</delete>
	
	<update id="uelete">
		UPDATE game
		SET
			gUpdtDate=now(),
			gDelNy=1
		WHERE
			gSeq=#{gSeq}
	</update>
	
	<delete id="listDelete" parameterType="java.util.List">
		DELETE FROM game
		<where>
			<foreach collection="list" item="item" separator="or" open="" close="">
				(gSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<delete id="listUelete" parameterType="java.util.List">
		UPDATE game
		SET
			gUpdtDate=now(),
			gDelNy=1
		<where> 
			<foreach collection="list" item="item" separator="or" open="" close="">
				(gSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<!--################## Review ##################-->
	
	<select id="selectReviewOneCount" resultType="Integer">
		SELECT COUNT(*)
		FROM 
			gameReview a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
       		<if test="shDelNy != null and !shDelNy.equals('')">AND a.grDelNy = #{shDelNy}</if> 				
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.grRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>	
	        <choose>
	            <when test="shOption == 1">AND a.grSeq = #{shValue}</when>
	            <when test="shOption == 2">AND b.gSeq = #{shValue}</when>
	            <when test="shOption == 3">AND b.gName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 4">AND c.mSeq = #{shValue}</when>
	            <when test="shOption == 5">AND c.mId LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 6">AND c.mName LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY a.grSeq DESC
	</select>
	
	<select id="selectReviewList" resultMap="resultMapObj_GR">
		SELECT
			a.grSeq,
		    a.member_mSeq,
		    a.game_gSeq,
		    a.grScore,
		    a.grComment,
		    a.grRegiDate,
		    b.gName,
		    c.mId,
		    c.mName
		FROM 
			gameReview a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
       		<if test="shDelNy != null and !shDelNy.equals('')">AND a.grDelNy = #{shDelNy}</if> 				
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.grRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>	
	        <choose>
	            <when test="shOption == 1">AND a.grSeq = #{shValue}</when>
	            <when test="shOption == 2">AND a.game_gSeq = #{shValue}</when>
	            <when test="shOption == 3">AND b.gName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 4">AND a.member_mSeq = #{shValue}</when>
	            <when test="shOption == 5">AND c.mId LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 6">AND c.mName LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY a.grSeq DESC
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
	<select id="selectReviewOne" resultMap="resultMapObj">
		SELECT
			a.grSeq,
		    a.member_mSeq,
		    a.game_gSeq,
		    a.grScore,
		    a.grComment,
		    a.grRegiDate,
		    b.gName,
		    c.mId,
		    c.mName
		FROM 
			gameReview a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
			AND a.grSeq=#{grSeq}
	</select>
	
	<select id="selectGameDetailReviewList" resultMap="resultMapObj_GR">
		SELECT
			a.grSeq,
		    a.member_mSeq,
		    a.game_gSeq,
		    a.grScore,
		    a.grComment,
		    a.grRegiDate,
		    c.mName,
		    d.fPath
		FROM 
			gameReview a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
			LEFT JOIN memberPfFile d ON a.member_mSeq = d.rSeq
		WHERE 1=1
			AND a.game_gSeq = #{gSeq}
			AND a.grDelNy = 0
		ORDER BY 
			<choose>
				<when test="grShOption == 1">
					a.grRegiDate DESC, a.grSeq DESC
				</when>
				<when test="grShOption == 2">
					a.grScore DESC, a.grSeq DESC
				</when>
			</choose>
		LIMIT #{grDtosSize} OFFSET 0
	</select>
	
	<select id="selectGameDetailReviewDistribution" resultMap="resultMapObj">
		SELECT
			ROUND(100.0 * COUNT(CASE WHEN grScore > 9 AND 10 >= grScore THEN 1 END) / COUNT(*)) AS score10,
			ROUND(100.0 * COUNT(CASE WHEN grScore > 8 AND 9 >= grScore THEN 1 END) / COUNT(*)) AS score9,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 7 AND 8 >= grScore THEN 1 END) / COUNT(*)) AS score8,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 6 AND 7 >= grScore THEN 1 END) / COUNT(*)) AS score7,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 5 AND 6 >= grScore THEN 1 END) / COUNT(*)) AS score6,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 4 AND 5 >= grScore THEN 1 END) / COUNT(*)) AS score5,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 3 AND 4 >= grScore THEN 1 END) / COUNT(*)) AS score4,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 2 AND 3 >= grScore THEN 1 END) / COUNT(*)) AS score3,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 1 AND 2 >= grScore THEN 1 END) / COUNT(*)) AS score2,
		    ROUND(100.0 * COUNT(CASE WHEN grScore > 0 AND 1 >= grScore THEN 1 END) / COUNT(*)) AS score1
		FROM gameReview
		WHERE 1=1
			AND game_gSeq = #{gSeq}
			AND grDelNy = 0
	</select>
	
	<insert id="insertReview">
		INSERT INTO gameReview
		(
		    member_mSeq,
		    game_gSeq,
		    grScore,
		    grComment,
		    grRegiDate,
		    grDelNy
		)
		VALUES
		(
			#{member_mSeq},
		    #{game_gSeq},
		    #{grScore},
		    #{grComment},
		    now(),
		    0
		)
		
		<selectKey resultType="String" keyProperty="grSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
</mapper>