<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dodo.module.member.MemberDao">
	<resultMap id="resultMapObj" type="com.dodo.module.member.MemberDto"></resultMap>
	<resultMap id="resultMapObj_MW" type="com.dodo.module.member.MemberWishDto"></resultMap>

	<!-- 공통 구문 selectCommon으로 선언 -->
	<sql id="selectCommon">
		FROM 
			member a
		WHERE 1=1
       		<if test="shDelNy != null and !shDelNy.equals('')">AND a.mDelNy = #{shDelNy}</if> 
       		<if test="shGenderCd != null and !shGenderCd.equals('')">AND a.mGenderCd = #{shGenderCd}</if>
       		<if test="shGradeCd != null and !shGradeCd.equals('')">AND a.mGradeCd = #{shGradeCd}</if>						
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.mRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 2
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.mUpdtDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>				
	        <choose>
	            <when test="shOption == 1">AND a.mSeq = #{shValue}</when>
	            <when test="shOption == 2">AND a.mId LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 3">AND a.mName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 4">AND a.mEmail LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 5">AND a.mBirth LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY a.mSeq DESC
	</sql>
	
	<sql id="selectCommonColumn">
		a.mSeq,
	    a.mId,
	    a.mName,
	    a.mEmail,
	    a.mBirth,
	    a.mGenderCd,
	    a.mPostcode,
		a.mRoadAddress,
		a.mDetailAddress,
		a.mLatitude,
		a.mLongitude,
	    a.mRegiDate,
	    a.mUpdtDate,
	    a.mGradeCd,
	    a.mDelNy,
	    (SELECT b.fPath
			FROM memberPfFile b
			WHERE 1=1 
				AND a.mSeq = b.rSeq
	    ) as fPath
	</sql>
	<!-- End -->
	
	<select id="selectListCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"/>
	</select>

	<select id="selectList" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
		<include refid="selectCommon"/>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
		<!-- 위와 동일 코드 LIMIT #{startRnumForMysql}, #{rowNumToShow} -->
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
		FROM 
			member a
		WHERE 1=1
			AND a.mSeq=#{mSeq}
	</select>
	
	<select id="selectSignInMember" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
			,a.mPwd
		FROM 
			member a
		WHERE 1=1
			AND a.mDelNy=0
			AND BINARY(a.mId)=#{mId}
	</select>
	
	<select id="insertCheckId" resultType="Integer">
		SELECT COUNT(*) FROM 
			member 
		WHERE 1=1
			AND mId=#{mId}
	</select>
	
	<insert id="insert">
		INSERT INTO member
		(
		    mId,
		    mName,
		    mEmail,
		    mPwd,
		    mBirth,
		    mGenderCd,
		    mGradeCd,
		    mPostcode,
			mRoadAddress,
			mDetailAddress,
			mLatitude,
			mLongitude,
		    mRegiDate,
		    mDelNy
		)
		VALUES
		(
		    #{mId},
		    #{mName},
		    #{mEmail},
		    #{mPwd},
		    #{mBirth},
		    #{mGenderCd},
		    44,
		    #{mPostcode},
			#{mRoadAddress},
			#{mDetailAddress},
			#{mLatitude},
			#{mLongitude},
		    now(),
		    0
		)
		
		<selectKey resultType="String" keyProperty="mSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE member
		SET
			mName=#{mName},
			mEmail=#{mEmail},
			mBirth=#{mBirth},
			mGenderCd=#{mGenderCd},
			mGradeCd=#{mGradeCd},
			mPostcode=#{mPostcode},
			mRoadAddress=#{mRoadAddress},
			mDetailAddress=#{mDetailAddress},
			mLatitude=#{mLatitude},
			mLongitude=#{mLongitude},
			mUpdtDate=now()
		WHERE 1=1
			AND mSeq=#{mSeq}
	</update>
	
	<update id="updateForgotPwd">
		UPDATE member
		SET
			mPwd=#{mPwd},
			mUpdtDate=now()
		WHERE 1=1
			AND mDelNy=0
			AND BINARY(mId)=#{mId}
			AND BINARY(mName)=#{mName}
			AND mBirth=#{mBirth}
	</update>
	
	<select id="updatePwdCheck" resultMap="resultMapObj">
		SELECT
			a.mPwd
		FROM 
			member a
		WHERE 1=1
			AND mSeq=#{mSeq}
	</select>
	
	<update id="updatePwd">
		UPDATE member
		SET
			mPwd=#{mPwd},
			mUpdtDate=now()
		WHERE 1=1
			AND mSeq=#{mSeq}
	</update>
	
	<delete id="delete">
		DELETE FROM member
		WHERE
			mSeq=#{mSeq}
	</delete>
	
	<update id="uelete">
		UPDATE member
		SET
			mDelNy=1
		WHERE
			mSeq=#{mSeq}
	</update>
	
	<delete id="listDelete" parameterType="java.util.List">
		DELETE FROM member
		<where>
			<foreach collection="list" item="item" separator="or" open="" close="">
				(mSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<delete id="listUelete" parameterType="java.util.List">
		UPDATE member
		SET
			mUpdtDate=now(),
			mDelNy=1
		<where> 
			<foreach collection="list" item="item" separator="or" open="" close="">
				(mSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<!-- ################################ Wish ############################## -->

	<sql id="selectGameCommonColumn">
		b.gSeq,
	    b.gName,
	    b.gLevel,
	    b.gMinPeople,
	    b.gMaxPeople,
	    b.gBestPeople,
	    b.gRecommendPeople,
	    b.gUseAge,
	    b.gMinTime,
	    b.gMaxTime,
	    b.gOfficialCd,
	    b.gOfficialUrl,
	    b.gComuUrl1,
	    b.gComuUrl2,
	    b.gCategoryCd,
	    b.gGDName,
	    b.gGAAName,
	    b.gGPName,
	    b.gRegiDate,
	    b.gUpdtDate,
	    (SELECT IFNULL(AVG(b.grScore),0)
			FROM gameReview c
			WHERE 1=1 
				AND c.grDelNy = 0 
				AND c.game_gSeq = b.gSeq
	    ) as grScoreAvg,
	    (SELECT COUNT(*) FROM gameReview c
			WHERE 1=1 
				AND c.grDelNy = 0 
				AND c.game_gSeq = b.gSeq
		) as grCount,
		(SELECT c.fPath
			FROM gameSmallTnFile c
			WHERE 1=1 
				AND b.gSeq = c.rSeq
	    ) as fPath
	</sql>
	
	<select id="selectWishListCount" resultType="Integer">
		SELECT COUNT(*)
		FROM 
			memberWish a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
			AND a.member_mSeq = #{member_mSeq}
       		AND b.gDelNy = 0
	</select>

	<select id="selectWishList" resultMap="resultMapObj_MW">
		SELECT
			a.mwSeq,
		    a.member_mSeq,
		    a.game_gSeq,
			<include refid="selectGameCommonColumn"/>
		FROM 
			memberWish a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
			AND a.member_mSeq = #{member_mSeq}
       		AND b.gDelNy = 0
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
		<!-- 위와 동일 코드 LIMIT #{startRnumForMysql}, #{rowNumToShow} -->
	</select>
	
	<insert id="insertWish">
		INSERT INTO memberWish
		(
		    member_mSeq,
		    game_gSeq,
		    mwRegiDate
		)
		VALUES
		(
			#{mSeq},
			#{gSeq},
		    now()
		)
		
		<selectKey resultType="String" keyProperty="mwSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<delete id="deleteWishByCondition">
		DELETE FROM memberWish
		WHERE 1=1
			AND member_mSeq=#{mSeq}
			AND game_gSeq=#{gSeq}
	</delete>
	
	<delete id="deleteWishBySeq">
		DELETE FROM memberWish
		WHERE
			mwSeq=#{mwSeq}
	</delete>
	
	<delete id="listDeleteWish" parameterType="java.util.List">
		DELETE FROM memberWish
		<where>
			<foreach collection="list" item="item" separator="or" open="" close="">
				(mwSeq=#{item})
			</foreach>
		</where>
	</delete>
		
</mapper>