<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dodo.module.sales.SalesDao">
	<resultMap id="resultMapObj" type="com.dodo.module.sales.SalesDto"></resultMap>
	
	<!-- 공통 구문 selectCommon으로 선언 -->
	<sql id="selectCommon">
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
			AND a.msDelNy = 0
			<if test="shStateCd != null and !shStateCd.equals('')">AND a.msStateCd = #{shStateCd}</if>			
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.msRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>				
	        <choose>
	            <when test="shOption == 1">AND b.gName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 2">AND c.mName LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY a.msSeq DESC
	</sql>
	
	<sql id="selectXdmCommon">
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
			LEFT JOIN memberSalesOrder d ON a.msSeq = d.memberSales_msSeq
			LEFT JOIN (
	            SELECT e.mName, e.mSeq
	            FROM member e
	        ) AS om ON d.oMember_mSeq = om.mSeq
		WHERE 1=1
			<if test="shDelNy != null and !shDelNy.equals('')">AND a.msDelNy = #{shDelNy}</if> 	
			<if test="shStateCd != null and !shStateCd.equals('')">AND a.msStateCd = #{shStateCd}</if>	
			<if test="shDeliStateCd != null and !shDeliStateCd.equals('')">AND d.msoDeliStateCd = #{shDeliStateCd}</if>			
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.msRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 2
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND d.msoRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>				
	        <choose>
	        	<when test="shOption == 1">AND c.mName LIKE CONCAT('%',#{shValue},'%')</when>
	        	<when test="shOption == 2">AND om.mName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 3">AND b.gName LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY a.msSeq DESC
	</sql>
	
	<sql id="selectCommonColumn">
		a.msSeq,
		a.member_mSeq,
		a.game_gSeq,
		a.msTitle,
		a.msDesc,
		a.msPrice,
		a.msFee,
		a.msStateCd,
		a.msHit,
		a.msRegiDate,
		a.msUpdtDate,
		b.gName,
		b.gCategoryCd,
		c.mName,
	    (SELECT d.fPath
			FROM memberPfFile d
			WHERE 1=1 
				AND c.mSeq = d.rSeq
	    ) as fPath
	</sql>
	
	<sql id="selectMySalesCommon">
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
			LEFT JOIN memberSalesOrder d ON a.msSeq = d.memberSales_msSeq
			LEFT JOIN (
	            SELECT e.mName, e.mSeq
	            FROM member e
	        ) AS om ON d.oMember_mSeq = om.mSeq
		WHERE 1=1
			AND a.msDelNy = 0
			AND a.member_mSeq = #{member_mSeq}
			<if test="shStateCd != null and !shStateCd.equals('')">AND a.msStateCd = #{shStateCd}</if>	
			<if test="shDeliStateCd != null and !shDeliStateCd.equals('')">AND d.msoDeliStateCd = #{shDeliStateCd}</if>			
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND a.msRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>				
	        <choose>
	            <when test="shOption == 1">AND b.gName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 2">AND om.mName LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY a.msSeq DESC
	</sql>
	
	<sql id="selectMySalesBuyCommon">
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
			LEFT JOIN memberSalesOrder d ON a.msSeq = d.memberSales_msSeq
		WHERE 1=1
			AND a.msDelNy = 0
			AND d.oMember_mSeq = #{oMember_mSeq}
			AND d.msoDeliStateCd IS NOT NULL
			<if test="shDeliStateCd != null and !shDeliStateCd.equals('')">AND d.msoDeliStateCd = #{shDeliStateCd}</if>			
			<choose>
				<when test="shOptionDate != null and !shOptionDate.equals('')
					and shOptionDate == 1
					and shDateStart != null and !shDateStart.equals('')
					and shDateEnd != null and !shDateEnd.equals('')">
					AND d.msoRegiDate BETWEEN #{shDateStartDB} AND #{shDateEndDB}
				</when>
			</choose>				
	        <choose>
	            <when test="shOption == 1">AND d.msoSeq = #{shValue}</when>
	            <when test="shOption == 2">AND b.gName LIKE CONCAT('%',#{shValue},'%')</when>
	            <when test="shOption == 3">AND c.mName LIKE CONCAT('%',#{shValue},'%')</when>
	        </choose>
		ORDER BY d.msoSeq DESC
	</sql>
	
	<sql id="selectSalesCommonColumn">
		<include refid="selectCommonColumn"/>,
		d.msoSeq,
		d.memberSales_msSeq,
		d.oMember_mSeq,
		d.msoDeliName,
		d.msoDeliPostcode,
		d.msoDeliRoadAddr,
		d.msoDeliDetailAddr,
		d.msoDeliTel,
		d.msoDeliMemo,
		d.msoDeliCompCd,
		d.msoDeliNo,
		d.msoDeliStateCd,
		d.msoRegiDate,
		d.createRowDate,
		(SELECT e.mName
			FROM member e
			WHERE 1=1 
				AND d.oMember_mSeq = e.mSeq
	    ) as omName
	</sql>
	
	<!-- ##################################Xdm################################### -->
	
	<select id="selectXdmListCount" resultType="Integer">
		SELECT COUNT(*)
			<include refid="selectXdmCommon"/>
	</select>
	
	<select id="selectXdmList" resultMap="resultMapObj">
		SELECT
			<include refid="selectSalesCommonColumn"/>
		<include refid="selectXdmCommon"/>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
	<select id="selectXdmOne" resultMap="resultMapObj">
		SELECT
			<include refid="selectSalesCommonColumn"/>
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
			LEFT JOIN memberSalesOrder d ON a.msSeq = d.memberSales_msSeq
		WHERE 1=1
			AND a.msSeq=#{msSeq}
	</select>
	
	<update id="uelete">
		UPDATE memberSales
		SET
			msUpdtDate=now(),
			msDelNy=1
		WHERE
			msSeq=#{msSeq}
	</update>
	
	<delete id="listDeleteOrder" parameterType="java.util.List">
		DELETE FROM memberSalesOrder
		<where>
			<foreach collection="list" item="item" separator="or" open="" close="">
				(memberSales_msSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<delete id="listDelete" parameterType="java.util.List">
		DELETE FROM memberSales
		<where>
			<foreach collection="list" item="item" separator="or" open="" close="">
				(msSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<delete id="listUelete" parameterType="java.util.List">
		UPDATE memberSales
		SET
			msUpdtDate=now(),
			msDelNy=1
		<where> 
			<foreach collection="list" item="item" separator="or" open="" close="">
				(msSeq=#{item})
			</foreach>
		</where>
	</delete>
	
	<!-- ##################################Usr################################### -->
	
	<select id="selectListCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"/>
	</select>

	<select id="selectList" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
		<include refid="selectCommon"/>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
	<select id="selectMySalesListCount" resultType="Integer">
		SELECT COUNT(*)
			<include refid="selectMySalesCommon"/>
	</select>

	<select id="selectMySalesList" resultMap="resultMapObj">
		SELECT
			<include refid="selectSalesCommonColumn"/>
		<include refid="selectMySalesCommon"/>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			<include refid="selectCommonColumn"/>
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
		WHERE 1=1
			AND a.msSeq=#{msSeq}
	</select>
	
	<update id="plusHit">
		UPDATE memberSales
		SET msHit = msHit + 1
		WHERE msSeq=#{msSeq};
	</update>
	
	<select id="insertCheck" resultType="Integer">
		SELECT COUNT(*) FROM 
			memberSales 
		WHERE 1=1
			AND member_mSeq=#{member_mSeq}
			AND game_gSeq=#{game_gSeq}
	</select>
	
	<insert id="insert">
		INSERT INTO memberSales
		(
			member_mSeq,
			game_gSeq,
			msTitle,
			msDesc,
			msPrice,
			msFee,
			msStateCd,
			msHit,
			msRegiDate,
			msDelNy
		)
		VALUES
		(
			#{member_mSeq},
		    #{game_gSeq},
		    #{msTitle},
		    #{msDesc},
		    #{msPrice},
		    #{msFee},
		    20,
		    0,
		   	now(),
		    0
		)
		
		<selectKey resultType="String" keyProperty="msSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<update id="update">
		UPDATE memberSales
		SET
			msTitle=#{msTitle},
			msDesc=#{msDesc},
			msPrice=#{msPrice},
			msFee=#{msFee},
			msUpdtDate=now()
		WHERE
			msSeq=#{msSeq}
	</update>
	
	<update id="updateSuccess">
		UPDATE memberSales a
		LEFT JOIN memberSalesOrder b ON a.msSeq = b.memberSales_msSeq
		SET a.msStateCd = 22
		WHERE b.msoSeq = #{msoSeq}
	</update>
	
	<delete id="delete">
		DELETE FROM memberSales
		WHERE
			msSeq=#{msSeq}
	</delete>
	
	<select id="orderCheckByMsSeq" resultType="Integer">
		SELECT COUNT(*) FROM 
			memberSalesOrder 
		WHERE 1=1
			AND memberSales_msSeq=#{msSeq}
	</select>
	
	<delete id="insert20minCheck">
		DELETE FROM memberSalesOrder
		WHERE 1=1
			AND msoDeliStateCd IS NULL 
			AND (now() - INTERVAL 20 MINUTE) >= createRowDate
			AND memberSales_msSeq=#{memberSales_msSeq}
	</delete>
	
	<select id="insertOrderCheck" resultType="Integer">
		SELECT COUNT(*) FROM 
			memberSalesOrder 
		WHERE 1=1
			AND memberSales_msSeq=#{memberSales_msSeq}
	</select>
	
	<select id="selectOrderOne" resultMap="resultMapObj">
		SELECT
			<include refid="selectSalesCommonColumn"/>
		FROM 
			memberSales a
			LEFT JOIN game b ON a.game_gSeq = b.gSeq
			LEFT JOIN member c ON a.member_mSeq = c.mSeq
			LEFT JOIN memberSalesOrder d ON a.msSeq = d.memberSales_msSeq
		WHERE 1=1
			AND d.msoSeq=#{msoSeq}
	</select>
	
	<select id="orderCheck" resultType="Integer">
		SELECT COUNT(*) FROM 
			memberSalesOrder 
		WHERE 1=1
			AND msoSeq=#{msoSeq}
	</select>
	
	<select id="orderCheckSuccessState" resultType="Integer">
		SELECT COUNT(*) FROM 
			memberSalesOrder 
		WHERE 1=1
			AND msoSeq=#{msoSeq}
			AND msoDeliStateCd IS NOT NULL
	</select>
	
	<insert id="insertOrder">
		INSERT INTO memberSalesOrder
		(
			memberSales_msSeq,
			oMember_mSeq,
			msoDeliName,
			msoDeliPostcode,
			msoDeliRoadAddr,
			msoDeliDetailAddr,
			msoDeliTel,
			msoDeliMemo,
			createRowDate
		)
		VALUES
		(
			#{memberSales_msSeq},
		    #{oMember_mSeq},
		    #{msoDeliName},
		    #{msoDeliPostcode},
		    #{msoDeliRoadAddr},
		    #{msoDeliDetailAddr},
		    #{msoDeliTel},
		    #{msoDeliMemo},
		    now()
		)
		
		<selectKey resultType="String" keyProperty="msoSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<delete id="deleteOrder">
		DELETE FROM memberSalesOrder
		WHERE
			msoSeq=#{msoSeq}
	</delete>
	
	<update id="updateOrderSuccess">
		UPDATE memberSalesOrder
		SET 
			msoDeliStateCd = 52,
			msoRegiDate = now()
		WHERE msoSeq = #{msoSeq}
	</update>
	
	<update id="updateOrderDeli">
		UPDATE memberSalesOrder
		SET 
			msoDeliStateCd = 53,
			msoDeliCompCd = #{msoDeliCompCd},
			msoDeliNo = #{msoDeliNo}
		WHERE msoSeq = #{msoSeq}
	</update>
	
	<update id="updateOrderDeliComplate">
		UPDATE memberSalesOrder
		SET 
			msoDeliStateCd = 54
		WHERE msoSeq = #{msoSeq}
	</update>
	
	<select id="selectMyBuyListCount" resultType="Integer">
		SELECT COUNT(*)
			<include refid="selectMySalesBuyCommon"/>
	</select>

	<select id="selectMyBuyList" resultMap="resultMapObj">
		SELECT
			<include refid="selectSalesCommonColumn"/>
		<include refid="selectMySalesBuyCommon"/>
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
	
</mapper>